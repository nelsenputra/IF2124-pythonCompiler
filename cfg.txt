Terminals:
'0' '1' '2' '3' '4' '5' '6' '7' '8' '9' 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 'u' 'v' 'w' 'x' 'y' 'z' 'A' 'B' 'C' 'D' 'E' 'F' 'G' 'H' 'I' 'J' 'K' 'L' 'M' 'N' 'O' 'P' 'Q' 'R' 'S' 'T' 'U' 'V' 'W' 'X' 'Y' 'Z' '!' '"' '#' '$' '%' '&' ''' '(' ')' '*' '+' ',' '-' '.' '/' ':' '<' '=' '>' '?' '@' '[' '\' ']' '^' '_' '`' '{' '|' '}' '~' 'space' 'newline' IdentifierName
Variables:
S InProgram Letter Number OtherChar AnyChar AnyString MutlilineAnyString Numbers FloatNumbers Boolean EOL ArithmeticOp AssignmentOp ComparisonOp LogicalOp IdentityOp MembershipOp BitwiseOp Operator Space SpaceOrEmpty Variable MultivarLeft Assignment Value ValueNoTernary OpParValue OperatedValue List Tuple Set Dictionary DictionaryContents Contents Class ClassHead ClassContents Function FunctionHead Arguments Argument FunctionContents InFunction Return FunctionCall Parameter Parameters Loop ForLoopHead Iterator WhileLoopHead Conditions LoopContents InLoop Break Continue LoopInFunc FuncLoopContents InFuncLoop Import ImportOptionalAs With WithHead WithContents WithInLoop WithInFunc WithInFuncLoop If Elif Else IfHead ElifHead ElseHead IfContents IfInLoop ElifInLoop ElseInLoop IfInFunc ElifInFunc ElseInFunc IfInFuncLoop ElifInFuncLoop ElseInFuncLoop Ternary0 Ternary1 Ternary TernaryLeft Statement StatementNoEOL SinglelineComment MultilineComment Pass Raise
Productions:
S -> InProgram S | InProgram | EOL S | EOL;
InProgram -> Statement | Class | Function | Import | Loop | With | If | Ternary | SinglelineComment | MultilineComment;
Letter -> 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z' | 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z';
Number -> '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9';
OtherChar -> '!' | '"' | '#' | '$' | '%' | '&' | ''' | '(' | ')' | '*' | '+' | ',' | '-' | '.' | '/' | ':' | '<' | '=' | '>' | '?' | '@' | '[' | '\' | ']' | '^' | '_' | '`' | '{' | '|' | '}' | '~' | 'space';
AnyChar -> Letter | Number | OtherChar;
AnyString -> AnyChar AnyString | AnyChar;
MutlilineAnyString -> AnyChar MutlilineAnyString | AnyChar | EOL MutlilineAnyString | EOL;
Numbers -> Number | Number Numbers;
FloatNumbers -> Numbers '.' Numbers;
Boolean -> 'T' 'r' 'u' 'e' | 'F' 'a' 'l' 's' 'e' | IdentifierName | FunctionCall | OperatedValue SpaceOrEmpty Operator SpaceOrEmpty OperatedValue | 'n' 'o' 't' Space Boolean | 'n' 'o' 't' SpaceOrEmpty '(' Boolean ')';
EOL -> 'newline' | SinglelineComment | Space SinglelineComment;
ArithmeticOp -> '+' | '-' | '*' | '/' | '%' | '*' '*' | '/' '/';
AssignmentOp -> '=' | '+' '=' | '-' '=' | '*' '=' | '/' '=' | '%' '=' | '/' '/' '=' | '*' '*' '=' | '&' '=' | '|' '=' | '^' '=' | '>' '>' '=' | '<' '<' '=';
ComparisonOp -> '=' '=' | '!' '=' | '<' | '>' | '<' '=' | '>' '=';
LogicalOp -> 'a' 'n' 'd' | 'o' 'r';
IdentityOp -> 'i' 's' | 'i' 's' Space 'n' 'o' 't';
MembershipOp -> 'i' 'n' | 'n' 'o' 't' Space 'i' 'n';
BitwiseOp -> '&' | '|' | '^' | '~' | '<' '<' | '>' '>';
Operator -> ArithmeticOp | ComparisonOp | Space LogicalOp Space | Space IdentityOp Space | Space MembershipOp Space | BitwiseOp;
Space -> 'space' | 'space' Space;
SpaceOrEmpty -> Space | e;
Variable -> IdentifierName | IdentifierName SpaceOrEmpty '.' SpaceOrEmpty Variable;
MultivarLeft -> Variable | Variable SpaceOrEmpty ',' SpaceOrEmpty MultivarLeft;
Assignment -> MultivarLeft SpaceOrEmpty AssignmentOp SpaceOrEmpty OperatedValue;
Value -> Numbers | FloatNumbers | ''' AnyString ''' | '"' AnyString '"' | ''' ''' | '"' '"' | List | Tuple | Set | Dictionary | Boolean | 'N' 'o' 'n' 'e' | FunctionCall | Variable | Ternary1 | Value SpaceOrEmpty '[' SpaceOrEmpty Value SpaceOrEmpty']' SpaceOrEmpty;
ValueNoTernary -> Numbers | FloatNumbers | ''' AnyString ''' | '"' AnyString '"' | ''' ''' | '"' '"' | List | Tuple | Set | Dictionary | Boolean | 'N' 'o' 'n' 'e' | FunctionCall | Variable;
OpParValue -> Value | '(' OpParValue ')';
OperatedValue -> OpParValue | OpParValue SpaceOrEmpty Operator SpaceOrEmpty OperatedValue;
List -> '[' Contents ']' | '[' SpaceOrEmpty ']';
Tuple -> '(' Contents ')' | '(' SpaceOrEmpty ')';
Set -> '{' Contents '}' | '{' SpaceOrEmpty '}';
Dictionary -> '{' DictionaryContents '}' | '{' SpaceOrEmpty '}';
DictionaryContents -> SpaceOrEmpty OperatedValue SpaceOrEmpty ':' SpaceOrEmpty OperatedValue SpaceOrEmpty | SpaceOrEmpty OperatedValue SpaceOrEmpty ':' SpaceOrEmpty OperatedValue SpaceOrEmpty ',' DictionaryContents | SpaceOrEmpty;
Contents -> SpaceOrEmpty OperatedValue SpaceOrEmpty | SpaceOrEmpty OperatedValue SpaceOrEmpty ',' Contents | Space;
Class -> ClassHead ClassContents;
ClassHead -> 'c' 'l' 'a' 's' 's' Space IdentifierName SpaceOrEmpty ':' EOL | 'c' 'l' 'a' 's' 's' Space IdentifierName SpaceOrEmpty '(' SpaceOrEmpty Arguments SpaceOrEmpty ')' SpaceOrEmpty ':' EOL;
ClassContents -> InProgram | InProgram ClassContents;
Function -> FunctionHead FunctionContents;
FunctionHead -> 'd' 'e' 'f' Space IdentifierName SpaceOrEmpty '(' SpaceOrEmpty Arguments SpaceOrEmpty ')' SpaceOrEmpty ':' EOL;
Arguments -> Argument SpaceOrEmpty ',' SpaceOrEmpty Arguments | Argument | e;
Argument -> IdentifierName | IdentifierName SpaceOrEmpty '=' SpaceOrEmpty OperatedValue;
FunctionContents -> InFunction | InFunction FunctionContents | Return | Return FunctionContents;
InFunction -> Statement | Class | Function | Import | LoopInFunc | WithInFunc | IfInFunc | Ternary | SinglelineComment | MultilineComment | Return;
Return -> 'r' 'e' 't' 'u' 'r' 'n' Space OperatedValue EOL;
FunctionCall -> IdentifierName SpaceOrEmpty '.' SpaceOrEmpty IdentifierName SpaceOrEmpty '(' Parameters ')' | IdentifierName SpaceOrEmpty '(' Parameters ')';
Parameters -> Parameter SpaceOrEmpty ',' SpaceOrEmpty Parameters | Parameter | e;
Parameter -> Argument | OperatedValue;
Loop -> ForLoopHead LoopContents | WhileLoopHead LoopContents;
ForLoopHead -> 'f' 'o' 'r' Space IdentifierName Space 'i' 'n' Space Iterator SpaceOrEmpty ':' EOL;
Iterator -> List | Tuple | Set | Dictionary | ''' AnyString ''' | '"' AnyString '"' | ''' ''' | '"' '"' | FunctionCall | Variable;
WhileLoopHead -> 'w' 'h' 'i' 'l' 'e' Conditions ':' EOL;
Conditions -> Space Boolean SpaceOrEmpty | Space Boolean SpaceOrEmpty Operator SpaceOrEmpty Boolean SpaceOrEmpty | SpaceOrEmpty '(' SpaceOrEmpty Boolean SpaceOrEmpty ')' SpaceOrEmpty | SpaceOrEmpty '(' SpaceOrEmpty Boolean SpaceOrEmpty Operator SpaceOrEmpty Boolean SpaceOrEmpty ')' SpaceOrEmpty;
LoopContents -> InLoop | InLoop LoopContents;
InLoop -> Statement | Class | Function | Import | Loop | WithInLoop | IfInLoop | Ternary | SinglelineComment | MultilineComment | Break | Continue;
Break -> 'b' 'r' 'e' 'a' 'k' EOL;
Continue -> 'c' 'o' 'n' 't' 'i' 'n' 'u' 'e' EOL;
LoopInFunc -> ForLoopHead FuncLoopContents | WhileLoopHead FuncLoopContents;
FuncLoopContents -> InFuncLoop | InFuncLoop FuncLoopContents;
InFuncLoop -> Statement | Class | Function | Import | LoopInFunc | WithInFuncLoop | IfInFuncLoop | Ternary | SinglelineComment | MultilineComment | Return | Break | Continue;
Import -> 'i' 'm' 'p' 'o' 'r' 't' Space IdentifierName ImportOptionalAs EOL | 'f' 'r' 'o' 'm' Space IdentifierName Space 'i' 'm' 'p' 'o' 'r' 't' Space IdentifierName ImportOptionalAs EOL | 'f' 'r' 'o' 'm' Space IdentifierName Space 'i' 'm' 'p' 'o' 'r' 't' Space '*' EOL;
ImportOptionalAs -> e | Space 'a' 's' Space IdentifierName;
With -> WithHead WithContents;
WithHead -> 'w' 'i' 't' 'h' Space OperatedValue Space 'a' 's' Space IdentifierName SpaceOrEmpty ':' EOL;
WithContents -> InProgram | InProgram WithContents;
WithInLoop -> WithHead LoopContents;
WithInFunc -> WithHead FunctionContents;
WithInFuncLoop -> WithHead FuncLoopContents;
If -> IfHead IfContents | IfHead IfContents Elif | IfHead IfContents Else;
Elif -> ElifHead IfContents | ElifHead IfContents Elif | ElifHead IfContents Else;
Else -> ElseHead IfContents;
IfHead -> 'i' 'f' Conditions ':' EOL;
ElifHead -> 'e' 'l' 'i' 'f' Conditions ':' EOL;
ElseHead -> 'e' 'l' 's' 'e' SpaceOrEmpty ':' EOL;
IfContents -> InProgram | InProgram IfContents;
IfInLoop -> IfHead LoopContents | IfHead LoopContents ElifInLoop | IfHead LoopContents ElseInLoop;
ElifInLoop -> ElifHead LoopContents | ElifHead LoopContents ElifInLoop | ElifHead LoopContents ElseInLoop;
ElseInLoop -> ElseHead LoopContents;
IfInFunc -> IfHead FunctionContents | IfHead FunctionContents ElifInFunc | IfHead FunctionContents ElseInFunc;
ElifInFunc -> ElifHead FunctionContents | ElifHead FunctionContents ElifInFunc | ElifHead FunctionContents ElseInFunc;
ElseInFunc -> ElseHead FunctionContents;
IfInFuncLoop -> IfHead FuncLoopContents | IfHead FuncLoopContents ElifInFuncLoop | IfHead FuncLoopContents ElseInFuncLoop;
ElifInFuncLoop -> ElifHead FuncLoopContents | ElifHead FuncLoopContents ElifInFuncLoop | ElifHead FuncLoopContents ElseInFuncLoop;
ElseInFuncLoop -> ElseHead FuncLoopContents;
Ternary0 -> ValueNoTernary | ValueNoTernary Space 'i' 'f' Conditions 'e' 'l' 's' 'e' Space Ternary0;
Ternary1 -> TernaryLeft Space 'i' 'f' Conditions 'e' 'l' 's' 'e' Space Ternary0;
Ternary -> Ternary1 EOL;
TernaryLeft -> Assignment | Raise | ValueNoTernary;
Statement -> StatementNoEOL EOL;
StatementNoEOL -> Assignment | FunctionCall | Pass | Raise;
SinglelineComment -> '#' AnyString SinglelineComment | '#' SinglelineComment | '#' AnyString 'newline' | '#' 'newline';
MultilineComment -> ''' ''' ''' MutlilineAnyString ''' ''' ''' EOL | '"' '"' '"' MutlilineAnyString '"' '"' '"' EOL | ''' ''' ''' ''' ''' ''' EOL | '"' '"' '" '"' '"' '"' EOL;
Pass -> 'p' 'a' 's' 's';
Raise -> 'r' 'a' 'i' 's' 'e' Space FunctionCall